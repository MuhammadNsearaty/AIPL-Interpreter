/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package com.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MULTIPLY = 6;
  /** RegularExpression Id. */
  int MOD = 7;
  /** RegularExpression Id. */
  int POWER = 8;
  /** RegularExpression Id. */
  int EQ = 9;
  /** RegularExpression Id. */
  int LT = 10;
  /** RegularExpression Id. */
  int GT = 11;
  /** RegularExpression Id. */
  int LET = 12;
  /** RegularExpression Id. */
  int GET = 13;
  /** RegularExpression Id. */
  int NEQ = 14;
  /** RegularExpression Id. */
  int OR = 15;
  /** RegularExpression Id. */
  int AND = 16;
  /** RegularExpression Id. */
  int NOT = 17;
  /** RegularExpression Id. */
  int assignment = 18;
  /** RegularExpression Id. */
  int DIGIT = 19;
  /** RegularExpression Id. */
  int NUM = 20;
  /** RegularExpression Id. */
  int END = 21;
  /** RegularExpression Id. */
  int FLOOP = 22;
  /** RegularExpression Id. */
  int WLOOP = 23;
  /** RegularExpression Id. */
  int LP = 24;
  /** RegularExpression Id. */
  int RP = 25;
  /** RegularExpression Id. */
  int FUNCTION = 26;
  /** RegularExpression Id. */
  int DEF = 27;
  /** RegularExpression Id. */
  int INT = 28;
  /** RegularExpression Id. */
  int TDOUBLE = 29;
  /** RegularExpression Id. */
  int TCHAR = 30;
  /** RegularExpression Id. */
  int TSTRING = 31;
  /** RegularExpression Id. */
  int FLOATINGPOINT = 32;
  /** RegularExpression Id. */
  int DOUBLE = 33;
  /** RegularExpression Id. */
  int LETTER = 34;
  /** RegularExpression Id. */
  int VAR = 35;
  /** RegularExpression Id. */
  int IF = 36;
  /** RegularExpression Id. */
  int ELSE = 37;
  /** RegularExpression Id. */
  int READ = 38;
  /** RegularExpression Id. */
  int WRITE = 39;
  /** RegularExpression Id. */
  int COLON = 40;
  /** RegularExpression Id. */
  int SIMICOLON = 41;
  /** RegularExpression Id. */
  int Quotation = 42;
  /** RegularExpression Id. */
  int DQuotation = 43;
  /** RegularExpression Id. */
  int STRING = 44;
  /** RegularExpression Id. */
  int CHAR = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<PLUS>",
    "<MULTIPLY>",
    "\"%\"",
    "\"^\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "<LET>",
    "<GET>",
    "<NEQ>",
    "\"|\"",
    "\"$\"",
    "\"~\"",
    "<assignment>",
    "<DIGIT>",
    "<NUM>",
    "\"!\"",
    "\"&\"",
    "\"@\"",
    "\"(\"",
    "\")\"",
    "\"func\"",
    "\"def\"",
    "\"int\"",
    "\"double\"",
    "\"char\"",
    "\"string\"",
    "<FLOATINGPOINT>",
    "<DOUBLE>",
    "<LETTER>",
    "<VAR>",
    "\"?\"",
    "\"??\"",
    "\"<-\"",
    "\"->\"",
    "\":\"",
    "\";\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "<STRING>",
    "<CHAR>",
    "\",\"",
  };

}
